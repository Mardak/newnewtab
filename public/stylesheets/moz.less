/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code, released
 * March 31, 1998.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998-1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Kevin Gerich (webmail@kmgerich.com)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/* all localizable skin settings shall live here */
@import url("chrome://global/locale/intl.css");






// @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");

/* ::::: XBL bindings ::::: */

menulist > menupopup,
.menulist-menupopup {
  -moz-binding: url("chrome://global/content/bindings/popup.xml#popup-scrollbars");
}

.menulist-compact {
  -moz-binding: url("chrome://global/content/bindings/menulist.xml#menulist-compact");
}

/* ::::: draggable elements ::::: */

toolbar:not([nowindowdrag="true"]) {
  -moz-binding: url("chrome://global/content/bindings/toolbar.xml#toolbar-drag");
}

statusbar:not([nowindowdrag="true"]) {
  -moz-binding: url("chrome://global/content/bindings/general.xml#statusbar-drag");
}

windowdragbox {
  -moz-binding: url("chrome://global/content/bindings/general.xml#windowdragbox");
}

/* ::::: root elements ::::: */

window,
page,
dialog,
wizard,
prefwindow { 
  -moz-appearance: dialog;
  background-color: #FFFFFF;
  color: -moz-DialogText;
  font: message-box;
}

prefwindow[type="child"] {
  padding-top: 18px;
  padding-bottom: 15px;
  -moz-padding-start: 18px;
  -moz-padding-end: 20px;
}

/* deprecated */
window.dialog {
  padding-top: 8px;
  padding-bottom: 10px;
  -moz-padding-start: 8px;
  -moz-padding-end: 10px;
}

/* ::::: alert icons :::::*/

.message-icon,
.alert-icon,
.error-icon,
.question-icon {
  width: 64px;
  height: 64px;
  margin: 6px;
  -moz-margin-end: 20px;
}

.message-icon {
  list-style-image: url("chrome://global/skin/icons/information-64.png");
}

.alert-icon {
  list-style-image: url("chrome://global/skin/icons/warning-64.png");
}

.error-icon {
  list-style-image: url("chrome://global/skin/icons/error-64.png");
}

.question-icon {
  list-style-image: url("chrome://global/skin/icons/question-64.png");
}

/* ::::: iframe ::::: */

iframe {
  border: none;
  width: 100px;
  height: 100px;
  min-width: 10px;
  min-height: 10px;
}

/* ::::: statusbar ::::: */

statusbar {
  min-width: 1px; /* DON'T DELETE!
  Prevents hiding of scrollbars in browser when window is made smaller.*/
  min-height: 15px !important;
  margin: 0px !important;
  /* need to use -moz-padding-end when/if bug 631729 gets fixed: */
  padding: 0px 16px 1px 1px;
  -moz-appearance: statusbar;
  text-shadow: rgba(255, 255, 255, 0.4) 0 1px;
}

statusbarpanel {
  -moz-box-align: center;
  -moz-box-pack: center;
  padding: 0 4px;
}

.statusbarpanel-iconic {
  padding: 0px;
}    

/* ::::: miscellaneous formatting ::::: */

:root:-moz-lwtheme,
[lwthemefooter="true"] {
  -moz-appearance: none;
}

:root:-moz-lwtheme-darktext {
  text-shadow: 1px 1px 1.5px white;
}

:root:-moz-lwtheme-brighttext {
  text-shadow: 1px 1px 1.5px black;
}

statusbar:-moz-lwtheme {
  -moz-appearance: none;
  background: none;
  border-style: none;
  text-shadow: inherit;
}

.inset {
  border: 1px solid ThreeDShadow;
  border-right-color: ThreeDHighlight;
  border-bottom-color: ThreeDHighlight;
  margin: 0 5px 5px;
}
  
.outset {
  border: 1px solid ThreeDShadow;
  border-left-color: ThreeDHighlight;
  border-top-color: ThreeDHighlight;
}

separator:not([orient="vertical"]) {
  height: 1.5em;
}
separator[orient="vertical"] {
  width: 1.5em;
}

separator.thin:not([orient="vertical"]) {
  height: 0.5em;
}  
separator.thin[orient="vertical"] {
  width: 0.5em;
}

separator.groove:not([orient="vertical"]) {
  border-top: 1px solid #A3A3A3;
  height: 0;
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}
separator.groove[orient="vertical"] {
  border-left: 1px solid #A3A3A3;
  width: 0;
  margin-left: 0.4em;
  margin-right: 0.4em;
}
    
.plain {
  -moz-appearance: none;
  margin: 0 !important;
  border: none;
  padding: 0;
}

description,
label {
  cursor: default;
}

label {
  margin: 2px 6px;
}

label[disabled="true"] {
  color: GrayText;
}

.tooltip-label {
  margin: 0;
}

description {
  margin-bottom: 4px;
}

.header {
  margin-bottom: 6px;
  font-weight: bold;
}

.monospace {
  font-family: monospace;
}

.indent {
  -moz-margin-start: 23px;
}

.box-padded {
  padding: 5px;
}

.spaced {
  margin: 3px 5px 4px;
}

.wizard-box {
  padding: 20px 44px 10px;
}

.text-link {
  color: -moz-nativehyperlinktext;
  text-decoration: underline;
  border: 1px solid transparent;
  cursor: pointer;
}
  
.text-link:-moz-focusring {
  border: 1px dotted -moz-DialogText;
}

.toolbar-focustarget {
  -moz-user-focus: ignore !important;
}

notification > button {
  margin: 0 3px;
  padding: 1px 10px;
  min-width: 60px;
  min-height: 16px;
  -moz-appearance: none;
  border-radius: 10000px;
  border: 1px solid rgba(0, 0, 0, .4);
  text-shadow: 0 1px rgba(255, 255, 255, .4);
  background: -moz-linear-gradient(top, #FFF, #CACACA) repeat-x;
  box-shadow: 0 1px rgba(255, 255, 255, .4);
}

notification > button:active:hover {
  background: #CCC;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, .2), 0 1px rgba(255, 255, 255, .4);
}

notification > button:-moz-focusring {
  box-shadow: 0 0 1px -moz-mac-focusring inset, 0 0 4px 1px -moz-mac-focusring, 0 0 1.5px 1px -moz-mac-focusring, 0 1px rgba(255, 255, 255, .4);
}

notification > button:active:hover:-moz-focusring {
  box-shadow: 0 0 1px -moz-mac-focusring inset, 0 0 4px 1px -moz-mac-focusring, 0 0 1.5px 1px -moz-mac-focusring, inset 0 1px 3px rgba(0, 0, 0, .2), 0 1px rgba(255, 255, 255, .4);
}

notification > button > .button-box > .button-text {
  margin: 0 !important;
}

/* :::::: autoscroll popup ::::: */

.autoscroller {
  height: 28px;
  width: 28px;
  border: none;
  margin: -14px;
  padding: 0;
  background-image: url("chrome://global/skin/icons/autoscroll.png");
  background-color: transparent;
  background-position: right top;
  -moz-appearance: none;
  -moz-window-shadow: none;
}

.autoscroller[scrolldir="NS"] {
  background-position: right center;
}

.autoscroller[scrolldir="EW"] {
  background-position: right bottom;
}

/* autorepeatbuttons in menus */

.popup-internal-box > autorepeatbutton {
  height: 15px;
  position: relative;
  /* Here we're using a little magic.
   * The arrow button is supposed to overlay the scrollbox, blocking
   * everything under it from reaching the screen. However, the menu background
   * is slightly transparent, so how can we block something completely without
   * messing up the transparency? It's easy: The native theming of the
   * "menuitem" appearance uses CGContextClearRect before drawing, which
   * clears everything under it.
   * Without help from native theming this effect wouldn't be achievable.
   */
  -moz-appearance: menuitem;
}

.popup-internal-box > .autorepeatbutton-up {
  margin-bottom: -15px;
}

.popup-internal-box > .autorepeatbutton-down {
  margin-top: -15px;
}

.popup-internal-box > autorepeatbutton[disabled="true"] {
  visibility: collapse;
}

:root {
  -moz-appearance: none;
  background-color: transparent;
}

/* SCROLLBOX */
#scrollbox:not([page-disabled]) {
  background-color: rgb(229,229,229);
  background-image: url(chrome://browser/skin/newtab/noise.png),
                    -moz-linear-gradient(rgba(255,255,255,.5), rgba(255,255,255,.2));
  background-attachment: fixed;
}

/* TOGGLE */
#toggle {
  width: 16px;
  height: 16px;
  padding: 0;
  border: none;
  background: -216px 0 transparent url(chrome://browser/skin/newtab/controls.png);
}

#toggle[page-disabled] {
  background-position: -232px 0;
}

/* ROWS */
.row {
  margin-bottom: 20px;
}

.row:last-child {
  margin-bottom: 0;
}

/* CELLS */
.cell {
  -moz-margin-end: 20px;
  background-color: rgba(255,255,255,.2);
  border: 1px solid;
  border-color: rgba(8,22,37,.12) rgba(8,22,37,.14) rgba(8,22,37,.16);
  border-radius: 1px;
  -moz-transition: border-color 100ms ease-out;
}

.cell:empty {
  border: 1px dashed;
  border-color: rgba(8,22,37,.15) rgba(8,22,37,.17) rgba(8,22,37,.19);
}

.cell:last-child {
  -moz-margin-end: 0;
}

.cell:hover:not(:empty) {
  border-color: rgba(8,22,37,.25) rgba(8,22,37,.27) rgba(8,22,37,.3);
}

/* SITES */
.site {
  text-decoration: none;
  -moz-transition-property: top, left, opacity, box-shadow, background-color;
}

.site:hover,
.site[dragged] {
  box-shadow: 0 0 10px rgba(8,22,37,.3);
}

.site[dragged] {
  -moz-transition-property: box-shadow, background-color;
  background-color: rgb(242,242,242);
}

/* THUMBNAILS */
.thumbnail {
  background-origin: padding-box;
  background-clip: padding-box;
  background-repeat: no-repeat;
  background-size: cover;
}

/* TITLES */
.title {
  padding: 0 8px;
  background-color: rgba(248,249,251,.95);
  color: #1f364c;
  font-family: -moz-use-system-font, tahoma,arial,helvetica,sans-serif;
  font-size: 12px;
  line-height: 24px;
}

/* CONTROLS */
.control {
  width: 24px;
  height: 24px;
  padding: 1px 2px 3px;
  border: none;
  background: transparent url(chrome://browser/skin/newtab/controls.png);
}

.control-pin:hover {
  background-position: -24px 0;
}

.control-pin:active {
  background-position: -48px 0;
}

.control-pin[pinned] {
  background-position: -72px 0;
}

.control-pin[pinned]:hover {
  background-position: -96px 0;
}

.control-pin[pinned]:active {
  background-position: -120px 0;
}

.control-block {
  background-position: -144px 0;
}

.control-block:hover {
  background-position: -168px 0;
}

.control-block:active {
  background-position: -192px 0;
}

:root {
  -moz-user-focus: normal;
}

input[type=button] {
  cursor: pointer;
}

/* SCROLLBOX */
#scrollbox {
  display: -moz-box;
  position: relative;
  -moz-box-flex: 1;
}

#scrollbox:not([page-disabled]) {
  overflow: auto;
}

/* TOGGLE */
#toggle {
  position: absolute;
  top: 12px;
  right: 12px;
}

#toggle:-moz-locale-dir(rtl) {
  left: 12px;
  right: auto;
}

/* MARGINS */
#vertical-margin {
  display: -moz-box;
  position: relative;
  -moz-box-flex: 1;
  -moz-box-orient: vertical;
}

#margin-top {
  min-height: 50px;
  max-height: 80px;
  -moz-box-flex: 1;
}

#margin-bottom {
  min-height: 40px;
  max-height: 100px;
  -moz-box-flex: 1;
}

#horizontal-margin {
  display: -moz-box;
  -moz-box-flex: 5;
}

.side-margin {
  min-width: 40px;
  max-width: 300px;
  -moz-box-flex: 1;
}

/* GRID */
#grid {
  display: -moz-box;
  -moz-box-flex: 5;
  -moz-box-orient: vertical;
  min-width: 600px;
  min-height: 400px;
  -moz-transition: 100ms ease-out;
  -moz-transition-property: opacity;
}

#grid[page-disabled] {
  opacity: 0;
}

#grid[locked],
#grid[page-disabled] {
  pointer-events: none;
}

/* ROWS */
.row {
  display: -moz-box;
  -moz-box-orient: horizontal;
  -moz-box-direction: normal;
  -moz-box-flex: 1;
}

/* CELLS */
.cell {
  display: -moz-box;
  -moz-box-flex: 1;
}

/* SITES */
.site {
  position: relative;
  -moz-box-flex: 1;
  -moz-transition: 100ms ease-out;
  -moz-transition-property: top, left, opacity;
}

.site[frozen] {
  position: absolute;
  pointer-events: none;
}

.site[dragged] {
  -moz-transition-property: none;
  z-index: 10;
}

/* LINK + THUMBNAILS */
.link,
.thumbnail {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.thumbnail {
  opacity: .8;
  -moz-transition: opacity 100ms ease-out;
}

.thumbnail[dragged],
.link:-moz-focusring > .thumbnail,
.site:hover > .link > .thumbnail {
  opacity: 1;
}

/* TITLES */
.title {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* CONTROLS */
.control {
  position: absolute;
  top: 4px;
  opacity: 0;
  -moz-transition: opacity 100ms ease-out;
}

.control:-moz-focusring,
.site:hover > .control {
  opacity: 1;
}

.control[dragged] {
  opacity: 0 !important;
}

@media (-moz-touch-enabled) {
  .control {
    opacity: 1;
  }
}

.control-pin:-moz-locale-dir(ltr),
.control-block:-moz-locale-dir(rtl) {
  left: 4px;
}

.control-block:-moz-locale-dir(ltr),
.control-pin:-moz-locale-dir(rtl) {
  right: 4px;
}

/* DRAG & DROP */

/*
 * This is just a temporary drag element used for dataTransfer.setDragImage()
 * so that we can use custom drag images and elements. It needs an opacity of
 * 0.01 so that the core code detects that it's in fact a visible element.
 */
.drag {
  width: 1px;
  height: 1px;
  background-color: #fff;
  opacity: 0.01;
}
